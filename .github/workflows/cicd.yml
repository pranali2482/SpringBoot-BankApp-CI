name: Spring-Boot-BankApp CI Pipeline

on:
  push:
    branches: 
      - main

jobs:
  compile:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn compile

  security-check:
    runs-on: ubuntu-latest
    needs: compile     #the current job will wait for the specified job(s)
    steps:
      - uses: actions/checkout@v4
      - name: Trivy Installation
        run: |
          sudo apt-get install -y wget apt-transport-https gnupg lsb-release
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update -y
          sudo apt-get install -y trivy
      - name: Trivy FS Scan
        run: trivy fs --format table -o fs-report.json .
      - name: Upload Trivy Report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-fs-report
          path: fs-report.json
      - name: Gitleaks Installation
        run: sudo apt install gitleaks -y
      - name: Gitleaks Code Scan
        run: gitleaks detect source . -r gitleaks-report.json -f json

  test:
    runs-on: ubuntu-latest
    needs: security-check
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Unit Test Cases
        run: mvn test

  build_project_and_sonar_scan:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build Project
        run: mvn package
      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: target/*.jar
      - name: Checkout again for Sonar (fetch-depth 0)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

  build_docker_image_and_push_to_ECR:
    runs-on: ubuntu-latest
    needs: build_project_and_sonar_scan
    env:
      RUN_NUMBER: ${{ github.run_number }}  # Using GitHub Actions run number for versioning
    steps:
      - uses: actions/checkout@v4
      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: app-jar
          path: app
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build Docker image and Push to ECR
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: 266869541345.dkr.ecr.ap-south-1.amazonaws.com/bankapp:${{ env.RUN_NUMBER }}
          file: ./Dockerfile

  deploy_to_kubernetes_with_argocd:
    runs-on: ubuntu-latest
    needs: build_docker_image_and_push_to_ECR
    env:
      RUN_NUMBER: ${{ github.run_number }}  # Using GitHub Actions run number for versioning
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1
      - name: Checkout K8s manifest repo
        uses: actions/checkout@v4
        with:
          repository: Pranalipokharkar/SpringBoot-BankApp-CD
          token: ${{ secrets.GH_PAT }}
          path: deployment-repo
      - name: Update Image Tag in Manifest
        run: |
          sed -i 's|bankapp:.*|bankapp:${{ env.RUN_NUMBER }}|g' deployment-repo/bankapp/bankapp-ds.yml
      - name: Commit and Push Changes
        run: |
          cd deployment-repo
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add .
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update image tag to ${{ env.RUN_NUMBER }}"
            git push
          fi
